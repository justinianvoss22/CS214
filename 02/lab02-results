Script started on 2022-01-20 13:43:39-05:00 [TERM="xterm-256color" TTY="/dev/pts/1" COLUMNS="109" LINES="23"]
]0;jav86@gold18: ~/CS214/labs/02[01;32mjav86@gold18[00m:[01;34m~/CS214/labs/02[00m$ cat example6.lex example6.y
%{
#include <stdio.h>
#include <stdlib.h>           /* atoi() */
#include <string.h>           /* strcmp() */
#include "example6.tab.h"
%}
%%
[0-9]+                  yylval = atoi(yytext); return NUMBER;
heat                    return TOKHEAT;
on|off                  yylval = !strcmp(yytext,"on"); return STATE;
set                     return TOKSET;
temperature             return TOKTEMPERATURE;
humidity                return TOKHUMIDITY;
\n                      /* ignore end of line */;
[ \t]+                  /* ignore whitespace */;
%%%{
#include <stdio.h>
#include <string.h>

/* declarations */
int yylex (void);
void yyerror (char const *);
int yyparse(void);

/* definitions */ 
void yyerror(const char *str) {
        fprintf(stderr,"error: %s\n",str);
}
 
int yywrap() {
        return 1;
} 
 
int main() {
        yyparse();
} 

%}

%token NUMBER TOKHEAT STATE TOKSET TOKTEMPERATURE TOKHUMIDITY
%%

commands: /* empty */
        | commands command
        ;

command:
        heat_switch
        | temperature_set
        | humidity_set
        ;

heat_switch:
        TOKHEAT STATE
        {
                if ($2) {  /* if STATE == 1 */
                        printf("\tHeat turned on\n");
                } else {
                        printf("\tHeat turned off\n");
                }
        }
        ;

temperature_set: 
        TOKSET TOKTEMPERATURE NUMBER
        {
                printf("\tTemperature set to %d\n",$3);
        }
        ;

humidity_set: 
        TOKSET TOKHUMIDITY NUMBER
        {
                printf("\tHumidity set to %d\n",$3);
        }
        ;]0;jav86@gold18: ~/CS214/labs/02[01;32mjav86@gold18[00m:[01;34m~/CS214/labs/02[00m$ make
make: 'example6' is up to date.
]0;jav86@gold18: ~/CS214/labs/02[01;32mjav86@gold18[00m:[01;34m~/CS214/labs/02[00m$ make
make: 'example6' is up to date.
]0;jav86@gold18: ~/CS214/labs/02[01;32mjav86@gold18[00m:[01;34m~/CS214/labs/02[00m$ e \ ./example6
heat on
	Heat turned on
heat off
	Heat turned off
tem   set temperature 400
	Temperature set to 400
set temperature 30
	Temperature set to 30
set humidity 400
	Humidity set to 400
set humidity 30
	Humidity set to 30
done    exit    ]0;jav86@gold18: ~/CS214/labs/02[01;32mjav86@gold18[00m:[01;34m~/CS214/labs/02[00m$ done    exit
exit

Script done on 2022-01-20 13:45:12-05:00 [COMMAND_EXIT_CODE="0"]
1.This code in these lines is based on the code that is in my lex file. Each part of the C code corresponds to either the start and Start command recieved, or the stop, going to the stop command recieved. Also, if the command is not start or stop, the code just makes it echo whatever input you typed.

2. When typing words starting with a letter, like "word", "R2D2", or "what", it outputs WORD. When typing "1234", it outputs NUMBER. When typing "hello_there", it outputs "WORD", and then on the next line "_WORD". This is because the underscore character is not included in any of the languages that we made, so it just outputs the type of the first thing typed, then an underscore, then the type of the other thing typed. We will need to add underscore to this grammar so it will be able to be a first and subsequent letter.

3. The nonterminal is able to recurse with itself, or keep on doing other production rules. The "commands" production is a nonterminal, as its production has other production rules that the program can choose from. The production "command" is also nonterminal, as it has two other production rules that it can do, "heat_switch" and "temperature_set". These two are terminals, as all it has is a tolken action, and a print statement. There is no where to go from these production rules, so the code will stop once it has gone to either of these. 

4. When you turn it on, it does not say heater on, it says heat turned on or off. It does not say whether it is turned off or on. It also does not know the actual output of the temperature, it just says temperature set.
