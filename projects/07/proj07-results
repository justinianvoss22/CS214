Script started on 2022-02-24 13:17:27-05:00 [TERM="xterm-256color" TTY="/dev/pts/0" COLUMNS="80" LINES="24"]
]0;jav86@gold17: ~/CS214/projects/07[01;32mjav86@gold17[00m:[01;34m~/CS214/projects/07[00m$ cat ArrayProcessing.java
/* ArrayProcessing.java is a driver for method printArray() and readArray().
 *
 *
 * Student Name: Justin Voss
 * Date: 2/24/22
 *
 * Precondition: anArray, with values given from user input
 * Output: a printed out result of the array
 ***************************************************************/

import java.io.*;
import java.util.Scanner;

public class ArrayProcessing

// This is the main driver for the two functions. 
{
  public static void main(String[] args) {
    System.out.println("Number of values in the array: " ); // asks the user for the size of the array
    Scanner sc = new Scanner(System.in);

    double[] anArray = new double [sc.nextInt()];              // makes an array with the user inputted value as the size
    System.out.println("Enter values: ");                     // asks the user for the values
    readArray(anArray);  // calls the read function
    printArray(anArray); // calls the print function
  }

   /* readArray() gets an array, which was given a size from the user, and adds values from the user to the array.
   * in an array.
   * Receive: anArray, an array of doubles.
   * Return: the average of the values in anArray.
   **************************************************************/
  
  public static void readArray(double anArray[])
   {
    
    Scanner sc = new Scanner(System.in);
      for (int i = 0; i < anArray.length; i++) {  // goes through array
        
        double value = sc.nextInt();              // takes user input
         anArray[i] = value;                      // assigns the array value to the user inputted value
      }
   }
  

  /* printArray prints out the array that was made by readArray
   * Receive: anArray, an array of doubles.
   * Return: prints out the array
   ************************************************************/

  public static void printArray(double anArray[])
  {
    System.out.println("Array: ");
     for (int i = 0; i < anArray.length; i++) {   // goes through the array
        System.out.println(anArray[i]);       // prints out array
     }
                            
  }

}]0;jav86@gold17: ~/CS214/projects/07[01;32mjav86@gold17[00m:[01;34m~/CS214/projects/07[00m$ javac -e deprecation ArrayProcessing.java
]0;jav86@gold17: ~/CS214/projects/07[01;32mjav86@gold17[00m:[01;34m~/CS214/projects/07[00m$ java r ArrayProcessing
Number of values in the array: 
4
Enter values: 
1
2
3
4
Array: 
1.0
2.0
3.0
4.0
]0;jav86@gold17: ~/CS214/projects/07[01;32mjav86@gold17[00m:[01;34m~/CS214/projects/07[00m$ exit

Script done on 2022-02-24 13:17:54-05:00 [COMMAND_EXIT_CODE="0"]
Script started on 2022-02-25 13:42:47-05:00 [TERM="xterm-256color" TTY="/dev/pts/0" COLUMNS="80" LINES="24"]
]0;jav86@gold26: ~/CS214/projects/07[01;32mjav86@gold26[00m:[01;34m~/CS214/projects/07[00m$ cat array_o processing.adb
-- array_processing.adb "test-drives" functions print_array and read_array.
-- Precondition: anArray is an array of numbers.
-- Output: prints out the array given by the user
--
-- Completed by: Justin Voss
-- Date: 2/24/22
-----------------------------------------------

with Ada.Text_IO; use Ada.Text_IO;  with Ada.Integer_Text_IO; use Ada.Integer_Text_IO;         -- Put(String)
with Ada.Float_Text_IO; use Ada.Float_Text_IO; -- Put(Float)
with Ada.Containers; use Ada.Containers;

--
-- This process uses read_array and print_array functions to print out an array with user-inputted values
--
procedure array_processing is
    
    type Vector is array ( Positive range <>) of Float;  -- Declare Vector type
    input : Float := 0.0;                                -- Declares input variable

-- this function creates a new empty vector with a user-inputted size
-- Input: Nothing. The user inputs a size inside the function.
-- Output: An empty vector with a user-inputted size
    function create_vector return Vector is
        size : Integer;  
    begin
        Put("Enter Size: ");
        Get(size);  -- Gets the size from the user
        declare
            anArray : Vector(1..size) := (others => 0.0);  -- makes a vector/array with the user-inputted size with values of 0.0
            begin 
            return anArray;  -- returns the array
        end;
    end create_vector;

-- this function reads values from the user into an aray
-- Input: an empty array with a specefied size
-- Output: the vector gets filled in with values
    procedure read_array(theArray  : in out Vector ) is 
    begin
        for I in 1..theArray'Length loop  -- Goes through the length of the vector
            Put("Enter Value: ");  
            Get(input); 
            theArray(I) := input;        -- Puts the array values as the user-inputted value
        end loop;
    end read_array;

-- this function prints out an array
-- Input: a vector with float values
-- Output: prints out values of the array
    procedure print_array(theArray : in Vector) is
    begin
    Put_Line("Array: ");
    for I in 1..theArray'Length loop    -- Goes through the length of the vector/array
        Put(theArray(I));    -- Prints out the array
        New_Line;
       
    end loop;
    end print_array;

    
    array1 : Vector := create_vector;  -- an empty vector is initialized
begin
-- calls both functions
    read_array(array1);
    print_array(array1);

end array_processing;]0;jav86@gold26: ~/CS214/projects/07[01;32mjav86@gold26[00m:[01;34m~/CS214/projects/07[00m$ gnatmake arrayProc    _processing.adb
gnatmake: "array_processing" up to date.
]0;jav86@gold26: ~/CS214/projects/07[01;32mjav86@gold26[00m:[01;34m~/CS214/projects/07[00m$ ./arrau y_processing
Enter Size: 6
Enter Value: 1
Enter Value: 2
Enter Value: 3
Enter Value: 4
Enter Value: 5
Enter Value: 6
Array: 
 1.00000E+00
 2.00000E+00
 3.00000E+00
 4.00000E+00
 5.00000E+00
 6.00000E+00
]0;jav86@gold26: ~/CS214/projects/07[01;32mjav86@gold26[00m:[01;34m~/CS214/projects/07[00m$ exit

Script done on 2022-02-25 13:43:23-05:00 [COMMAND_EXIT_CODE="0"]
Script started on 2022-02-25 12:36:04-05:00 [TERM="xterm-256color" TTY="/dev/pts/0" COLUMNS="80" LINES="24"]
]0;jav86@gold26: ~/CS214/projects/07/clojure[01;32mjav86@gold26[00m:[01;34m~/CS214/projects/07/clojure[00m$ cat array+ _processing.clj
cat: array_processing.clj: No such file or directory
]0;jav86@gold26: ~/CS214/projects/07/clojure[01;32mjav86@gold26[00m:[01;34m~/CS214/projects/07/clojure[00m$ cd src
]0;jav86@gold26: ~/CS214/projects/07/clojure/src[01;32mjav86@gold26[00m:[01;34m~/CS214/projects/07/clojure/src[00m$ cat array_processing.clj
;; array_processing.clj "test-drives" function read_array() and print_array().
;;
;; Output: prints out array
;;
;; Usage: clojure -m array_processing
;;
;; Completed by: Justin Voss
;; Date: 2/24/22
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(ns array_processing)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; read_array() reads array values
;; Receive: aVec, a vector of numbers.
;; Return: the array, filled out with user inputted values
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(defn read_array [size aVec]
    (println "Enter array value: ")
  (if (= size 0)                                          ; if size is less than 0, the recursion ends, and the program returns the vector
    aVec
        (do
                (recur (- size 1) (conj  aVec (read))  )  ; recurs with the size minus one, to eventually get out of the loop when size = 0. 
        )                                                 ; the vec that is recurred is a list with a value from the user added each time
  )
)


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; print_array() prints out an array
;; Receive: aVec, a vector of numbers. 
;; Return: prints out the vector
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(defn print_array [aVec]
    (if (not-empty aVec)            ; if the vector is not empty, then it prints and recurs
        (do 
            (println (first aVec))  ; prints the first value of the vector
            (recur (rest aVec))     ; recurs the rest of the list except the first value
        )
    )
)  


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; main function to test functions read_array() and print_array()
;; Output: the sum and average of some test vectors.
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(defn -main []
    (println "Enter size of array: ")
  (let
    [
        vec0 []                         ; makes an empty vector
        size (read)                     ; gets a size from the user
        vector1 (read_array size vec0)  ; adds the values to vector1, to be used later to print out the vector. The read_array function returns a vector
    ]
    (println "Array: ")
    (print_array vector1)               ; prints out the vector

    
  )
)]0;jav86@gold26: ~/CS214/projects/07/clojure/src[01;32mjav86@gold26[00m:[01;34m~/CS214/projects/07/clojure/src[00m$ cd ..
]0;jav86@gold26: ~/CS214/projects/07/clojure[01;32mjav86@gold26[00m:[01;34m~/CS214/projects/07/clojure[00m$ clojure -m array_processing
Enter size of array: 
4
Enter array value: 
1
Enter array value: 
2
Enter array value: 
3
Enter array value: 
4
Enter array value: 
Array: 
1
2
3
4
]0;jav86@gold26: ~/CS214/projects/07/clojure[01;32mjav86@gold26[00m:[01;34m~/CS214/projects/07/clojure[00m$ exit

Script done on 2022-02-25 12:36:50-05:00 [COMMAND_EXIT_CODE="0"]
Script started on 2022-02-24 13:18:50-05:00 [TERM="xterm-256color" TTY="/dev/pts/0" COLUMNS="80" LINES="24"]
]0;jav86@gold17: ~/CS214/projects/07[01;32mjav86@gold17[00m:[01;34m~/CS214/projects/07[00m$ cat A array+_  _processing.rb
# array_processing.rb prints out an array that was inputted by the user
# Precondition: theArray is an array of numbers
# Output: the average of the values in theArray
#
# Begun by: Dr. Adams, for CS 214 at Calvin College.
# Completed by:: Justin Voss
# Date:   2/24/22
########################################################

###############################################
# read_array() reads an array from the user
# Receive: anArray, an array of numbers, and size
# Return: the array, with filled in values
################################################

def read_array(anArray,size)
    for i in 0..size-1
        anArray[i] = gets.to_i  # gets values from the user
    end

 end
 
 
 ###############################################
 # print_array() prints out the array
 # Receive: anArray, an array of numbers
 # Return: prints out the array
 ################################################
 def print_array(anArray,size)
    for i in 0..size-1 
       puts anArray[i]  # prints the array
    end
  
 
 end
 
 if __FILE__ == $0
   
    puts "Enter array size: "
    size = gets.to_i
    array1 = Array.new(size)  # Define array1 as an Array with the size as the user inputted size
    puts "Enter array values: "
    read_array(array1,size)  # calls the read array function
    puts "Array: "
    print_array(array1,size) # calls the print array function
   
 
 end
 
]0;jav86@gold17: ~/CS214/projects/07[01;32mjav86@gold17[00m:[01;34m~/CS214/projects/07[00m$ ruby array_processing.rb
Enter array size: 
4
Enter array values: 
1
2
3
4
Array: 
1
2
3
4
]0;jav86@gold17: ~/CS214/projects/07[01;32mjav86@gold17[00m:[01;34m~/CS214/projects/07[00m$ exit

Script done on 2022-02-24 13:19:12-05:00 [COMMAND_EXIT_CODE="0"]
